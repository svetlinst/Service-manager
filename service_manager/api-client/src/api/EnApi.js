/**
 * Service Manager API
 * Service process automation project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PatchedServiceOrderHeader from '../model/PatchedServiceOrderHeader';
import ServiceOrderHeader from '../model/ServiceOrderHeader';

/**
* En service.
* @module api/EnApi
* @version 1.0.0
*/
export default class EnApi {

    /**
    * Constructs a new EnApi. 
    * @alias module:api/EnApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the enApiServiceOrdersCreate operation.
     * @callback module:api/EnApi~enApiServiceOrdersCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceOrderHeader} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/ServiceOrderHeader} serviceOrderHeader 
     * @param {module:api/EnApi~enApiServiceOrdersCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceOrderHeader}
     */
    enApiServiceOrdersCreate(serviceOrderHeader, callback) {
      let postBody = serviceOrderHeader;
      // verify the required parameter 'serviceOrderHeader' is set
      if (serviceOrderHeader === undefined || serviceOrderHeader === null) {
        throw new Error("Missing the required parameter 'serviceOrderHeader' when calling enApiServiceOrdersCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = ServiceOrderHeader;
      return this.apiClient.callApi(
        '/en/api/service_orders/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enApiServiceOrdersDestroy operation.
     * @callback module:api/EnApi~enApiServiceOrdersDestroyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id A unique integer value identifying this service order header.
     * @param {module:api/EnApi~enApiServiceOrdersDestroyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    enApiServiceOrdersDestroy(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling enApiServiceOrdersDestroy");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/en/api/service_orders/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enApiServiceOrdersList operation.
     * @callback module:api/EnApi~enApiServiceOrdersListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ServiceOrderHeader>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/EnApi~enApiServiceOrdersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ServiceOrderHeader>}
     */
    enApiServiceOrdersList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ServiceOrderHeader];
      return this.apiClient.callApi(
        '/en/api/service_orders/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enApiServiceOrdersPartialUpdate operation.
     * @callback module:api/EnApi~enApiServiceOrdersPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceOrderHeader} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id A unique integer value identifying this service order header.
     * @param {Object} opts Optional parameters
     * @param {module:model/PatchedServiceOrderHeader} [patchedServiceOrderHeader] 
     * @param {module:api/EnApi~enApiServiceOrdersPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceOrderHeader}
     */
    enApiServiceOrdersPartialUpdate(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['patchedServiceOrderHeader'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling enApiServiceOrdersPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = ServiceOrderHeader;
      return this.apiClient.callApi(
        '/en/api/service_orders/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enApiServiceOrdersRetrieve operation.
     * @callback module:api/EnApi~enApiServiceOrdersRetrieveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceOrderHeader} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id A unique integer value identifying this service order header.
     * @param {module:api/EnApi~enApiServiceOrdersRetrieveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceOrderHeader}
     */
    enApiServiceOrdersRetrieve(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling enApiServiceOrdersRetrieve");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceOrderHeader;
      return this.apiClient.callApi(
        '/en/api/service_orders/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enApiServiceOrdersUpdate operation.
     * @callback module:api/EnApi~enApiServiceOrdersUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceOrderHeader} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id A unique integer value identifying this service order header.
     * @param {module:model/ServiceOrderHeader} serviceOrderHeader 
     * @param {module:api/EnApi~enApiServiceOrdersUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceOrderHeader}
     */
    enApiServiceOrdersUpdate(id, serviceOrderHeader, callback) {
      let postBody = serviceOrderHeader;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling enApiServiceOrdersUpdate");
      }
      // verify the required parameter 'serviceOrderHeader' is set
      if (serviceOrderHeader === undefined || serviceOrderHeader === null) {
        throw new Error("Missing the required parameter 'serviceOrderHeader' when calling enApiServiceOrdersUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = ServiceOrderHeader;
      return this.apiClient.callApi(
        '/en/api/service_orders/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
