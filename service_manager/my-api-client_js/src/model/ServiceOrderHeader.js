/**
 * Service Manager API
 * Service process automation project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlaceOfServiceEnum from './PlaceOfServiceEnum';

/**
 * The ServiceOrderHeader model module.
 * @module model/ServiceOrderHeader
 * @version 1.0.0
 */
class ServiceOrderHeader {
    /**
     * Constructs a new <code>ServiceOrderHeader</code>.
     * @alias module:model/ServiceOrderHeader
     * @param id {Number} 
     * @param createdOn {Date} 
     * @param updatedOn {Date} 
     * @param problemDescription {String} 
     * @param customer {Number} 
     * @param customerAsset {Number} 
     */
    constructor(id, createdOn, updatedOn, problemDescription, customer, customerAsset) { 
        
        ServiceOrderHeader.initialize(this, id, createdOn, updatedOn, problemDescription, customer, customerAsset);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, createdOn, updatedOn, problemDescription, customer, customerAsset) { 
        obj['id'] = id;
        obj['created_on'] = createdOn;
        obj['updated_on'] = updatedOn;
        obj['problem_description'] = problemDescription;
        obj['customer'] = customer;
        obj['customer_asset'] = customerAsset;
    }

    /**
     * Constructs a <code>ServiceOrderHeader</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceOrderHeader} obj Optional instance to populate.
     * @return {module:model/ServiceOrderHeader} The populated <code>ServiceOrderHeader</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceOrderHeader();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('created_on')) {
                obj['created_on'] = ApiClient.convertToType(data['created_on'], 'Date');
            }
            if (data.hasOwnProperty('updated_on')) {
                obj['updated_on'] = ApiClient.convertToType(data['updated_on'], 'Date');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('problem_description')) {
                obj['problem_description'] = ApiClient.convertToType(data['problem_description'], 'String');
            }
            if (data.hasOwnProperty('is_serviced')) {
                obj['is_serviced'] = ApiClient.convertToType(data['is_serviced'], 'Boolean');
            }
            if (data.hasOwnProperty('is_completed')) {
                obj['is_completed'] = ApiClient.convertToType(data['is_completed'], 'Boolean');
            }
            if (data.hasOwnProperty('serviced_on')) {
                obj['serviced_on'] = ApiClient.convertToType(data['serviced_on'], 'Date');
            }
            if (data.hasOwnProperty('completed_on')) {
                obj['completed_on'] = ApiClient.convertToType(data['completed_on'], 'Date');
            }
            if (data.hasOwnProperty('send_emails')) {
                obj['send_emails'] = ApiClient.convertToType(data['send_emails'], 'Boolean');
            }
            if (data.hasOwnProperty('packaging')) {
                obj['packaging'] = ApiClient.convertToType(data['packaging'], 'String');
            }
            if (data.hasOwnProperty('place_of_service')) {
                obj['place_of_service'] = PlaceOfServiceEnum.constructFromObject(data['place_of_service']);
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = ApiClient.convertToType(data['customer'], 'Number');
            }
            if (data.hasOwnProperty('customer_asset')) {
                obj['customer_asset'] = ApiClient.convertToType(data['customer_asset'], 'Number');
            }
            if (data.hasOwnProperty('department')) {
                obj['department'] = ApiClient.convertToType(data['department'], 'Number');
            }
            if (data.hasOwnProperty('handed_over_by')) {
                obj['handed_over_by'] = ApiClient.convertToType(data['handed_over_by'], 'Number');
            }
            if (data.hasOwnProperty('accepted_by')) {
                obj['accepted_by'] = ApiClient.convertToType(data['accepted_by'], 'Number');
            }
            if (data.hasOwnProperty('serviced_by')) {
                obj['serviced_by'] = ApiClient.convertToType(data['serviced_by'], 'Number');
            }
            if (data.hasOwnProperty('completed_by')) {
                obj['completed_by'] = ApiClient.convertToType(data['completed_by'], 'Number');
            }
            if (data.hasOwnProperty('handed_over_to')) {
                obj['handed_over_to'] = ApiClient.convertToType(data['handed_over_to'], 'Number');
            }
            if (data.hasOwnProperty('service_level_agreement')) {
                obj['service_level_agreement'] = ApiClient.convertToType(data['service_level_agreement'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceOrderHeader</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceOrderHeader</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServiceOrderHeader.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['problem_description'] && !(typeof data['problem_description'] === 'string' || data['problem_description'] instanceof String)) {
            throw new Error("Expected the field `problem_description` to be a primitive type in the JSON string but got " + data['problem_description']);
        }
        // ensure the json data is a string
        if (data['packaging'] && !(typeof data['packaging'] === 'string' || data['packaging'] instanceof String)) {
            throw new Error("Expected the field `packaging` to be a primitive type in the JSON string but got " + data['packaging']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }

        return true;
    }


}

ServiceOrderHeader.RequiredProperties = ["id", "created_on", "updated_on", "problem_description", "customer", "customer_asset"];

/**
 * @member {Number} id
 */
ServiceOrderHeader.prototype['id'] = undefined;

/**
 * @member {Date} created_on
 */
ServiceOrderHeader.prototype['created_on'] = undefined;

/**
 * @member {Date} updated_on
 */
ServiceOrderHeader.prototype['updated_on'] = undefined;

/**
 * @member {Boolean} active
 */
ServiceOrderHeader.prototype['active'] = undefined;

/**
 * @member {String} problem_description
 */
ServiceOrderHeader.prototype['problem_description'] = undefined;

/**
 * @member {Boolean} is_serviced
 */
ServiceOrderHeader.prototype['is_serviced'] = undefined;

/**
 * @member {Boolean} is_completed
 */
ServiceOrderHeader.prototype['is_completed'] = undefined;

/**
 * @member {Date} serviced_on
 */
ServiceOrderHeader.prototype['serviced_on'] = undefined;

/**
 * @member {Date} completed_on
 */
ServiceOrderHeader.prototype['completed_on'] = undefined;

/**
 * @member {Boolean} send_emails
 */
ServiceOrderHeader.prototype['send_emails'] = undefined;

/**
 * @member {String} packaging
 */
ServiceOrderHeader.prototype['packaging'] = undefined;

/**
 * @member {module:model/PlaceOfServiceEnum} place_of_service
 */
ServiceOrderHeader.prototype['place_of_service'] = undefined;

/**
 * @member {String} slug
 */
ServiceOrderHeader.prototype['slug'] = undefined;

/**
 * @member {Number} customer
 */
ServiceOrderHeader.prototype['customer'] = undefined;

/**
 * @member {Number} customer_asset
 */
ServiceOrderHeader.prototype['customer_asset'] = undefined;

/**
 * @member {Number} department
 */
ServiceOrderHeader.prototype['department'] = undefined;

/**
 * @member {Number} handed_over_by
 */
ServiceOrderHeader.prototype['handed_over_by'] = undefined;

/**
 * @member {Number} accepted_by
 */
ServiceOrderHeader.prototype['accepted_by'] = undefined;

/**
 * @member {Number} serviced_by
 */
ServiceOrderHeader.prototype['serviced_by'] = undefined;

/**
 * @member {Number} completed_by
 */
ServiceOrderHeader.prototype['completed_by'] = undefined;

/**
 * @member {Number} handed_over_to
 */
ServiceOrderHeader.prototype['handed_over_to'] = undefined;

/**
 * @member {Number} service_level_agreement
 */
ServiceOrderHeader.prototype['service_level_agreement'] = undefined;






export default ServiceOrderHeader;

